{"remainingRequest":"/Users/gimseon-u/Desktop/Projects/wysiwyg/wysiwyg-vue-spring-boot/vue-wysiwyg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gimseon-u/Desktop/Projects/wysiwyg/wysiwyg-vue-spring-boot/vue-wysiwyg/src/components/ExampleAddImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gimseon-u/Desktop/Projects/wysiwyg/wysiwyg-vue-spring-boot/vue-wysiwyg/src/components/ExampleAddImage.vue","mtime":1645839296881},{"path":"/Users/gimseon-u/Desktop/Projects/wysiwyg/wysiwyg-vue-spring-boot/vue-wysiwyg/node_modules/cache-loader/dist/cjs.js","mtime":1645620863593},{"path":"/Users/gimseon-u/Desktop/Projects/wysiwyg/wysiwyg-vue-spring-boot/vue-wysiwyg/node_modules/babel-loader/lib/index.js","mtime":1645620863823},{"path":"/Users/gimseon-u/Desktop/Projects/wysiwyg/wysiwyg-vue-spring-boot/vue-wysiwyg/node_modules/cache-loader/dist/cjs.js","mtime":1645620863593},{"path":"/Users/gimseon-u/Desktop/Projects/wysiwyg/wysiwyg-vue-spring-boot/vue-wysiwyg/node_modules/vue-loader/lib/index.js","mtime":1645620863880}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEVkaXRvciwgRWRpdG9yQ29udGVudCB9IGZyb20gJ0B0aXB0YXAvdnVlLTInCmltcG9ydCBEb2N1bWVudCBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi1kb2N1bWVudCcKaW1wb3J0IFBhcmFncmFwaCBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi1wYXJhZ3JhcGgnCmltcG9ydCBUZXh0IGZyb20gJ0B0aXB0YXAvZXh0ZW5zaW9uLXRleHQnCmltcG9ydCBJbWFnZSBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi1pbWFnZScKaW1wb3J0IERyb3BjdXJzb3IgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tZHJvcGN1cnNvcicKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRXhhbXBsZUFkZEltYWdlJywKCiAgY29tcG9uZW50czogewogICAgRWRpdG9yQ29udGVudCwKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWRpdG9yOiBudWxsLAogICAgICBjb250ZW50OiBudWxsLAogICAgICBpbWFnZUZpbGVzOiB7fQogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIG9uRmlsZUNoYW5nZShlKSB7CiAgICAgIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXQogICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpCiAgICAgIGlmICh1cmwpIHsKICAgICAgICB0aGlzLmVkaXRvci5jaGFpbigpLmZvY3VzKCkuc2V0SW1hZ2Uoe3NyYzogdXJsLCB0aXRsZTogZmlsZS5uYW1lfSkucnVuKCkKICAgICAgfQogICAgfSwKICAgIGdldEltYWdlcygpIHsKICAgICAgY29uc3QgY29udGVudEpzb24gPSB0aGlzLmVkaXRvci5nZXRKU09OKCkKICAgICAgY29uc3QgaW1hZ2VzID0gY29udGVudEpzb24uY29udGVudC5maWx0ZXIoYyA9PiBjLnR5cGUgPT0gJ2ltYWdlJykKICAgICAgdGhpcy5jb250ZW50ID0gaW1hZ2VzCiAgICAgIHJldHVybiB0aGlzLmNvbnRlbnQKICAgIH0sCiAgICBhc3luYyBnZXRCbG9icygpIHsKICAgICAgY29uc3QgaW1hZ2VzID0gdGhpcy5nZXRJbWFnZXMoKQogICAgICBjb25zdCBibG9iUHJvbWlzZXMgPSBpbWFnZXMubWFwKGltYWdlID0+IGZldGNoKGltYWdlLmF0dHJzLnNyYykpCiAgICAgIGNvbnN0IGJsb2JzID0gYXdhaXQgUHJvbWlzZS5hbGwoYmxvYlByb21pc2VzKQogICAgICByZXR1cm4gYmxvYnMKICAgIH0sCiAgICBhc3luYyBnZXRGaWxlcygpIHsKICAgICAgY29uc3QgaW1hZ2VzID0gdGhpcy5nZXRJbWFnZXMoKQogICAgICBjb25zdCBpbWdMb2NhbFNyY3MgPSBpbWFnZXMubWFwKGltYWdlID0+IGltYWdlLmF0dHJzLnNyYykKICAgICAgY29uc3QgYmxvYlByb21pc2VzID0gaW1nTG9jYWxTcmNzLm1hcChzcmMgPT4gZmV0Y2goc3JjKSkKICAgICAgY29uc3QgZmlsZU5hbWVzID0gaW1hZ2VzLm1hcChpbWFnZSA9PiBpbWFnZS5hdHRycy50aXRsZSkKICAgICAgY29uc3QgYmxvYnMgPSBhd2FpdCBQcm9taXNlLmFsbChibG9iUHJvbWlzZXMpCgogICAgICBjb25zdCBmaWxlcyA9IHt9CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYmxvYnMubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb25zdCBmaWxlID0gbmV3IEZpbGUoW2Jsb2JzW2ldLmJsb2IoKV0sIGZpbGVOYW1lc1tpXSwgeyB0eXBlOiAnaW1hZ2VzL2pwZWcnfSkKICAgICAgICBjb25zdCBvcmlnaW5TcmMgPSBpbWdMb2NhbFNyY3NbaV0KICAgICAgICBmaWxlc1tvcmlnaW5TcmNdID0gZmlsZQogICAgICB9CiAgICAgIHRoaXMuaW1hZ2VGaWxlcyA9IGZpbGVzCiAgICAgIHJldHVybiBmaWxlcwogICAgfSwKICAgIGFzeW5jIHVwbG9hZEltYWdlcygpIHsKICAgICAgY29uc3QgZmlsZXMgPSBhd2FpdCB0aGlzLmdldEZpbGVzKCkKICAgICAgLy8gdXBsb2FkIGltYWdlcyBsb2dpYwoKICAgICAgLy8gdGVtcG9yYXJ5IGxvZ2ljCiAgICAgIE9iamVjdC5rZXlzKGZpbGVzKS5mb3JFYWNoKG9yaWdpblNyYyA9PiBmaWxlc1tvcmlnaW5TcmNdID0gJ3B1dCB5b3VyIHVwbG9hZGVkIGltYWdlIHNyYycpCiAgICAgIHJldHVybiBmaWxlcwogICAgfSwKICAgIGFzeW5jIHNldEVkaXRvckNvbnRlbnRXaXRoVXBsb2FkZWRJbWFnZXMoKSB7CiAgICAgIGNvbnN0IHVwbG9hZGVkSW1hZ2VTcmNzID0gYXdhaXQgdGhpcy51cGxvYWRJbWFnZXMoKQogICAgICBjb25zdCBqc29uQ29udGVudHMgPSB0aGlzLmVkaXRvci5nZXRKU09OKCkuY29udGVudAogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGpzb25Db250ZW50cy5sZW5ndGg7IGkrKykgewogICAgICAgIGlmIChqc29uQ29udGVudHNbaV0udHlwZSAhPSAnaW1hZ2UnKSBjb250aW51ZQogICAgICAgIGNvbnN0IG9yaWdpblNyYyA9IGpzb25Db250ZW50c1tpXS5hdHRycy5zcmMKICAgICAgICBqc29uQ29udGVudHNbaV0uYXR0cnMuc3JjID0gdXBsb2FkZWRJbWFnZVNyY3Nbb3JpZ2luU3JjXQogICAgICAgIGNvbnNvbGUubG9nKHVwbG9hZGVkSW1hZ2VTcmNzW29yaWdpblNyY10pCiAgICAgIH0KCiAgICAgIHRoaXMuZWRpdG9yLmNvbW1hbmRzLnNldENvbnRlbnQoanNvbkNvbnRlbnRzKQogICAgfSwKICAgIGdldEpzb24oKSB7CiAgICAgIHRoaXMuY29udGVudCA9IHRoaXMuZWRpdG9yLmdldEpTT04oKQogICAgfSwKICAgIGdldEh0bWwoKSB7CiAgICAgIHRoaXMuY29udGVudCA9IHRoaXMuZWRpdG9yLmdldEhUTUwoKQogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmVkaXRvciA9IG5ldyBFZGl0b3IoewogICAgICBleHRlbnNpb25zOiBbCiAgICAgICAgRG9jdW1lbnQsCiAgICAgICAgUGFyYWdyYXBoLAogICAgICAgIFRleHQsCiAgICAgICAgSW1hZ2UsCiAgICAgICAgRHJvcGN1cnNvciwKICAgICAgXSwKICAgICAgY29udGVudDogYAogICAgICAgIDxwPlRoaXMgaXMgYSBiYXNpYyBleGFtcGxlIG9mIGltcGxlbWVudGluZyBpbWFnZXMuIERyYWcgdG8gcmUtb3JkZXIuPC9wPgogICAgICBgLAogICAgfSkKICB9LAoKICBiZWZvcmVVbm1vdW50KCkgewogICAgdGhpcy5lZGl0b3IuZGVzdHJveSgpCiAgfSwKfQo="},{"version":3,"sources":["ExampleAddImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ExampleAddImage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div v-if=\"editor\">\n      <input type=\"file\" @change=\"onFileChange\">\n    </div>\n    <editor-content :editor=\"editor\"/>\n    <button @click=\"getJson\">JSON</button>\n    <button @click=\"getHtml\">HTML</button>\n    <button @click=\"getImages\">Images</button>\n    <button @click=\"getBlobs\">Get blob</button>\n    <button @click=\"getFiles\">Get File</button>\n    <button @click=\"setEditorContentWithUploadedImages\">Set Content With Uploaded Image url</button>\n    <pre>\n      {{ content }}\n    </pre>\n\n    <!-- Display the content retrieved from tip-tap editor -->\n    <!-- <span v-html=\"content\"></span>-->\n\n  </div>\n</template>\n\n<script>\nimport { Editor, EditorContent } from '@tiptap/vue-2'\nimport Document from '@tiptap/extension-document'\nimport Paragraph from '@tiptap/extension-paragraph'\nimport Text from '@tiptap/extension-text'\nimport Image from '@tiptap/extension-image'\nimport Dropcursor from '@tiptap/extension-dropcursor'\n\nexport default {\n  name: 'ExampleAddImage',\n\n  components: {\n    EditorContent,\n  },\n\n  data() {\n    return {\n      editor: null,\n      content: null,\n      imageFiles: {}\n    }\n  },\n\n  methods: {\n    onFileChange(e) {\n      const file = e.target.files[0]\n      const url = URL.createObjectURL(file)\n      if (url) {\n        this.editor.chain().focus().setImage({src: url, title: file.name}).run()\n      }\n    },\n    getImages() {\n      const contentJson = this.editor.getJSON()\n      const images = contentJson.content.filter(c => c.type == 'image')\n      this.content = images\n      return this.content\n    },\n    async getBlobs() {\n      const images = this.getImages()\n      const blobPromises = images.map(image => fetch(image.attrs.src))\n      const blobs = await Promise.all(blobPromises)\n      return blobs\n    },\n    async getFiles() {\n      const images = this.getImages()\n      const imgLocalSrcs = images.map(image => image.attrs.src)\n      const blobPromises = imgLocalSrcs.map(src => fetch(src))\n      const fileNames = images.map(image => image.attrs.title)\n      const blobs = await Promise.all(blobPromises)\n\n      const files = {}\n      for (let i = 0; i < blobs.length; i++) {\n        const file = new File([blobs[i].blob()], fileNames[i], { type: 'images/jpeg'})\n        const originSrc = imgLocalSrcs[i]\n        files[originSrc] = file\n      }\n      this.imageFiles = files\n      return files\n    },\n    async uploadImages() {\n      const files = await this.getFiles()\n      // upload images logic\n\n      // temporary logic\n      Object.keys(files).forEach(originSrc => files[originSrc] = 'put your uploaded image src')\n      return files\n    },\n    async setEditorContentWithUploadedImages() {\n      const uploadedImageSrcs = await this.uploadImages()\n      const jsonContents = this.editor.getJSON().content\n      for (let i = 0; i < jsonContents.length; i++) {\n        if (jsonContents[i].type != 'image') continue\n        const originSrc = jsonContents[i].attrs.src\n        jsonContents[i].attrs.src = uploadedImageSrcs[originSrc]\n        console.log(uploadedImageSrcs[originSrc])\n      }\n\n      this.editor.commands.setContent(jsonContents)\n    },\n    getJson() {\n      this.content = this.editor.getJSON()\n    },\n    getHtml() {\n      this.content = this.editor.getHTML()\n    }\n  },\n\n  mounted() {\n    this.editor = new Editor({\n      extensions: [\n        Document,\n        Paragraph,\n        Text,\n        Image,\n        Dropcursor,\n      ],\n      content: `\n        <p>This is a basic example of implementing images. Drag to re-order.</p>\n      `,\n    })\n  },\n\n  beforeUnmount() {\n    this.editor.destroy()\n  },\n}\n</script>\n\n<style lang=\"scss\">\n/* Basic editor styles */\n.ProseMirror {\n  > * + * {\n    margin-top: 0.75em;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n\n    &.ProseMirror-selectednode {\n      outline: 3px solid #68CEF8;\n    }\n  }\n}\n</style>"]}]}